
version: 2
jobs:
  rubocop:
    working_directory: ~/crayfish
    docker:
      - image: circleci/ruby:2.5.8-node-browsers-legacy
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: crayfish_test
          POSTGRES_PASSWORD: posetgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

  rspec:
    working_directory: ~/crayfish
    docker:
      - image: circleci/ruby:2.5.8-node-browsers-legacy
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: crayfish_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-
      # 依存関係をバンドル インストールします
      - run:
          name: 依存関係のインストール
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - run: sudo apt install -y postgresql-client || true
      # バンドル キャッシュを保存します
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: mv config/database.yml.ci config/database.yml
      - run:
          name: データベースのセットアップ
          command: |
            bundle exec rake db:create
      # Rspec
      - run:
          name: Rspec
          command: bundle exec rspec

  deploy:
    docker:
      - image: circleci/ruby:2.5.8-node-browsers-legacy
    steps:
      - checkout
      - add_ssh_keys:
      - run:
          name: Deploy
          command: ssh -o StrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} 'cd /var/www/crayfisher && git pull origin master'
      - run:
          name: Run post-deploy tasks
          command: |
            export RAILS_MASTER_KEY=$MASTER_KEY
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_REGION=$AWS_REGION
            export AWS_BUCKET=$AWS_BUCKET
            gem install bundler
            bundle install
            ps ax | grep mysql
            sudo service mysqld status
            sudo service mysqld start
            bundle exec rails db:migrate RAILS_ENV=production

orbs:
  ruby: circleci/ruby@0.1.2
  heroku: circleci/heroku@1.0.0
workflows:
  version: 2
  build:
    jobs:
      - rubocop
      - rspec
      - deploy:
          requires:
            - rspec
            - rubocop
          filters:
            branches:
              only: master
